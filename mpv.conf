# MPV - mpv.conf
# Configured by Ryuuko:3 - 2024-12-03 - https://github.com/Ryuu43

# ==========    GENERAL    ==========

autofit=75%x75%
autofit-smaller=50%x50%
force-seekable=yes                              # If the player thinks that the media is not seekable, force enable seeking
keep-open=yes
reset-on-next-file=pause
#reset-on-next-file=pause                        # After playing the next file in the playlist,
msg-color=yes                                 	# Color for console ouput terminal
msg-module=yes
msg-level=pointer_event=error,input=error,demux=error,autoload=warn,dvdnav=fatal,ad=fatal		# Suppress useless warnings
image-display-duration=inf		              	# No autoplay with image
hr-seek=yes                                   	# Turn on precise seeks when possible, seeks will not limited by keyframes
cursor-autohide-fs-only                		 	# don't autohide the cursor in window mode, only fullscreen
input-media-keys=no                     		# enable/disable OSX media keys
hr-seek-framedrop=no							# fixes audio desync
input-default-bindings=no						# eh no working anymore
no-input-default-bindings						# this worked for me, idk why the above command didn't work for me
taskbar-progress=no                             # Disable playback progress rendering in taskbar
autocreate-playlist=filter
#force-window=immediate
resume-playback=no
#save-position-on-quit=yes
#idle = yes
prefetch-playlist=yes  
gpu-shader-cache-dir = "~~/cache/shader"
watch-later-dir = "~~/cache/watch_later"
log-file=output.txt								# Log file

# ==========    VIDEO    ==========

# This is what profile=high-quality do:
# scale=ewa_lanczossharp (This also changes the cscale)
# hdr-peak-percentile=99.995
# hdr-contrast-recovery=0.30
# deband=yes

vo=gpu-next                                  	# Video output driver sử dụng libplacebo để render. Hỗ trợ gần như đầy đủ các tính năng giống như --vo=gpu
hwdec=nvdec									# enable hardware decoding, defaults to 'no' (auto-copy-safe | auto-copy | auto-safe *recommend* | hwdec=videotoolbox | videotoolbox-copy | cuda | cuda-copy | nvdec | nvdec-copy | vdpau-copy | vaapi | vaapi-copy | dxva2 | dxva2-copy | d3d11 | d3d11va | d3d11va-copy | d3d12 | d3d12va | d3d12va-copy )
# hwdec-codecs choose =all but if u got ffmpeg av1 error no HW acceleration then choose nvdec-copy ( nvidia card ) 
# Recommended method to do hardware decoding on NVIDIA GPUs
hwdec-codecs=nvdec-copy							#
profile=gpu-hq									# High quality video output, require rather fast video card
#priority=high
gpu-api=d3d11								# "vulkan" Linux - "d3d11" (Windows)
# gpu-api=vulkan                              	# Recommend for Linux
framedrop=no
deinterlace=no 									# global reset of deinterlacing to off ( why using this ? its dogshit )
# Additional Vulkan settings
#vulkan-async-compute=yes
#vulkan-async-transfer=yes
#vulkan-queue-count=1
#vd-lavc-dr=yes

# ==========   YTDL   ==========

#ytdl-raw-options=ignore-errors=				# Disabled cuz it broke the ytdl-raw-options fetch subtitle

ytdl-raw-options-append=no-check-certificates=
ytdl-format=bestvideo+bestaudio/best          	# Param selects the source of youtube-dl
load-unsafe-playlists=yes
ytdl-raw-options=write-auto-subs=,sub-lang="vi.*,en.*",yes-playlist=

#mark-watched for youtube videos Source: https://voz.vn/t/tong-hop-nhung-addon-chat-cho-firefox-pc-mobile.682181/post-25727088
ytdl-raw-options-append=cookies-from-browser=firefox:C:\Users\Administrator\AppData\Roaming\zen\Profiles\sw4lslhl.Default (alpha)
ytdl-raw-options-append=mark-watched=

# ==========    ON SCREEN DISPLAY AND ON SCREEN CONTROLLER    ==========

no-border
osd-bar=no                                    	# Use UOSC instead of default UI
osc=no                                        	# Use morden-x UI instead of default
border=no                                     	# Turn off title bar and border and use morden X instead
cursor-autohide=100                           	# The mouse pointer will automatically hide behind the ms
osd-level=1       
osd-on-seek=no                            		# https://mpv.io/manual/stable/#options-osd-level
osd-duration=1000                             	# Appearance time of OSD messages equalsms

# Customize the style of OSD messages
osd-font="XHei Intel"
osd-font-size=20
osd-border-size=0.6
osd-shadow-offset=0.75
osd-color="#CCFFFFFF"
osd-border-color="#DD322640"
osd-fractions=yes
osd-blur=0.2  
osd-bold=yes

# ==========    LANGUAGE PRIORITY    ==========

track-auto-selection=yes
alang=ja,jp,jpn,vi,vie,en,eng                 	# Language priority order of audio
slang=vi,vie                                  	# Language priority order of subtitles

# ==========    AUDIO    ==========

audio-file-auto=fuzzy                   		# external audio doesn't has to match the file name exactly to autoload
audio-pitch-correction=yes              		# automatically insert scaletempo when playing with higher speed
volume-max=200                          		# maximum volume in %, everything above 100 results in amplification
volume=40                              			# default volume, 100 = unchanged
#gapless-audio=yes
video-sync=audio        						# DS currently requires reading ahead a frame
audio-buffer=1									# Use this if u got messages "Audio Device Buffer Underrun Detected"
initial-audio-sync=yes
#audio-delay=+0.084								# Use this if u got messages "Audio Device Buffer Underrun Detected"
#audio-exclusive=yes							# This is highly recommended for a multi channel soundbar. You need to activate "exclusive mode" in your sound driver on Windows. If u have this error disable this "ao/wasapi: Error initializing device: AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED (0x88890019)"
#Channels that your device supports
#"auto-safe" only sends channels that your active audio device can handle, which can cause issues for an ARC/eARC setup (uses TV instead of soundbar) 
#"auto" sends every channels as they're, which works for an eARC/ARC setup but also can cause issues if your sound device doesn't support certain channel setups
#An alternative is to set up a whitelist for supported channels
#audio-channels=auto							#audio-channels=stereo,5.1,7.1
#audio-channels=auto-safe 


# ==========    SUBTITLES    ==========

demuxer-mkv-subtitle-preroll=yes              	# https://mpv.io/manual/stable/#options-mkv-subtitle-preroll
demuxer-mkv-subtitle-preroll-secs=2

sub-fix-timing=no                             	# Do not try to fix gaps (which might make it worse in some cases).
sub-auto=fuzzy                                	# Load subtitle bên ngoài có tên gần giống với video
sub-file-paths-append=ass
sub-file-paths-append=srt
sub-file-paths-append=pgs
sub-file-paths-append=vob
sub-file-paths-append=sub
sub-file-paths-append=sup
sub-file-paths-append=subs
sub-file-paths-append=subtitles

# The following options apply to subtitles formats that do not have their own style (eg: SRT, VTT...)
# This is my favorite style, you can adjust the style according to your own preferences
sub-font='XHei Intel'
sub-font-size=40
sub-blur=1
sub-ass-style-overrides=WrapStyle=0,Kerning=yes,Spacing=0,MarginL=200,MarginR=200,MarginV=74,Outline=3.6,Shadow=1.5
sub-ass-use-video-data=none
subs-fallback=yes
sub-use-margins=yes
sub-ass-force-margins=yes
sub-color='#FFFFFFFF'
sub-border-color="#FF000000"
sub-shadow-color="#A0000000"
sub-border-size=1.0
sub-margin-x=100 
sub-margin-y=50
sub-shadow-offset=0
sub-spacing=0.5
sub-bold=yes						     
sub-gauss=0.05        	                      	# Gaussian blur factor. 0 means no blur applied (default)
blend-subtitles=no                           	# Subtitle blending in scenechanges (smoother effect)

# ==========    SCREENSHOT    ==========

screenshot-format=png                         	# Format of screenshoot
screenshot-high-bit-depth=no                  	# Bitdepth is the same as video.
screenshot-tag-colorspace=no                  	# Tonemap screenshot
screenshot-png-compression=6                  	# PNG compression ratio (1-9) - High values ​​give better compression, but in return it takes more processing time  
screenshot-dir="~/Pictures/mpv"             	# Directory containing screenshots
screenshot-template="%{?demuxer-via-network==yes:${media-title}%{?demuxer-via-network==yes:_${filename/no-ext}%{!demuxer-via-network==yes:${filename}-%wH.%wM.%wS.%wT-#%#00n" # Định dạng tên (filename-hour-minute-second-milisecond-number)

# ==========    CACHE    ==========

cache=yes    
#cache-on-disk=yes								# Store cache payload on the hard disk instead of in RAM. (This may negatively impact performance unless used for slow input such as network.)
cache-pause=yes	        						# do not pause on underruns
cache-pause-wait=3								# <seconds>
cache-pause-initial=yes							# This can be used to ensure playback starts smoothly after buffering (as controlled by cache-pause-wait)
cache-secs=300                                 	# Enabling cache is useful when playing back previously over the network
demuxer-max-bytes=4GiB                        	# Limit the data size to allow the demuxer to read first
demuxer-seekable-cache=yes
demuxer-readahead-secs=3000                    	# Time limit for allowing demuxer to read first
demuxer-max-back-bytes=2GiB                		# Limit the size of read data the demuxer can store
stream-buffer-size=1MiB          				# KiB, MiB ( 1MiB is optimal more than that affect seekable )
demuxer-hysteresis-secs=0
demuxer-lavf-buffersize=9194304  				# Bytes
demuxer-lavf-o=live_start_index=-1				# Improve latency for livestreams
demuxer-lavf-o-add=fflags=+nobuffer 			# can help for weird reasons
demuxer-lavf-probe-info=nostreams   			# avoid probing unless absolutely needed
demuxer-lavf-analyzeduration=0.1    			# if it probes, reduce it

# ==========    NETWORKING    ==========

tls-verify=no
network-timeout=100
stream-lavf-o-append=reconnect_on_http_error=4xx,5xx
stream-lavf-o-append=reconnect_delay_max=30
stream-lavf-o-append=reconnect_streamed=yes

# ==========    COLORSPACE    ==========
target-prim=auto
# target-prim=bt.709 # target Rec.709 for SDR TVs
# target-prim=bt.2020 # target Rec.2020 (wide color gamut) for HDR TVs
target-trc=auto
vf=format=colorlevels=full:colormatrix=auto
video-output-levels=full

# ==========   Tone-mapping & HDR - SDR  ==========

target-colorspace-hint=no                     	# Force tonemapping HDR -> SDR if your screen supports HDR then turn it on and enable HDR in Windows settings.
tone-mapping=spline
target-contrast=auto 							# Max contrast ratio of your supported device, usually ~1000 for IPS, ~3000-5000 for VA and inf for OLED)
tone-mapping-param=0.6
gamut-mapping-mode=auto
libplacebo-opts-append=gamut_expansion=yes     	# Allows the gamut mapping function to expand the gamut, in cases where the target gamut exceeds that of the source
libplacebo-opts-append=perceptual_deadzone=0.4
libplacebo-opts-append=perceptual_strength=0.5

# ====================== DEFAULT PROFILE FOR ALL ======================

# ==========    DITHER    ==========

# Use "fruit" (8-Bit/8-Bit+FRC display), "ordered" (true 10-Bit/12-Bit display) or "error-diffusion" with high-end GPUs
# use dither=ordered on vo=gpu-next It's extremely fast
# On vo=gpu stick with dither=fruit
dither-depth=auto 								# 6for 6Bit PAL, 8 for 8bit, 10 or 12 for 10bit - Nah just use auto
#temporal-dither=yes
# Use "fruit" (8-Bit/8-Bit+FRC display), "ordered" (true 10-Bit/12-Bit display) or "error-diffusion" with high-end GPUs
# use dither=ordered on vo=gpu-next It's extremely fast
# On vo=gpu stick with dither=fruit
error-diffusion=sierra-lite						#Quality (Lite version of Sierra algorithms come from Frankie Sierra in 1990)
dither=error-diffusion							#Quality
#dither=fruit              						#i-GPU/Low-end  
#dither-size-fruit=8 							#i-GPU/Low-end

# ==========    DEBANDING    ==========

# Banding is a visual artifact, visual artifacts should never be in a video. 
# Example of banding: https://imgur.com/32d77H0
# Debanding is the process of removing said banding.
# 6 minute explanation of what causes banding: https://www.youtube.com/watch?v=h9j89L8eQQk

deband=no                                    	# Should only be turned on when the video has banding. (Toggle Keybind=D)
deband-iterations=2                           	# https://mpv.io/manual/stable/#options-deband-iterations
deband-threshold=32                         	# https://mpv.io/manual/stable/#options-deband-threshold
deband-range=16									# https://mpv.io/manual/stable/#options-deband-threshold
deband-grain=5                               	# https://mpv.io/manual/stable/#options-deband-grain - dynamic grain: set to "0" if using the static grain shader


# ==========   MOTION INTERPOLATION    ==========

display-fps-override=60
interpolation=yes
tscale=oversample								# ( oversample *recommend* | linear | bicubic | bcspline | catmull_rom | mitchell |spline16 | spline36 | spline64 | ginseng | sinc | robidoux | lanczos |  robidouxsharp | box | nearest | triangle | gaussian | bartlett | cosine | hanning | hamming | tukey | quadric | welch | kaiser | blackman | sphinx )
#tscale=sphinx									# Requires vo=gpu-next 
#tscale-blur=0.6991556596428412
#tscale-radius=1.05 #lower (e.g. 0.955) = sharper; higher (e.g. 1.005) = smoother 
#tscale-clamp=0.0
video-sync=display-resample
profile-restore=copy-equal
#video-sync-max-video-change = 5

########  Anti-Ringing  ########
#Luma upscale deringing (Higher = Less rining)
scale-antiring=0.8
#Luma downscale deringing (Higher = Less rining)
dscale-antiring=0.8								# luma downscale deringing; currently does nothing with vo=gpu-next
#Chroma upscale deringing (Higher = Less rining)
cscale-antiring=0.8								# chroma upscale deringing; currently does nothing with vo=gpu-next

########  Video Settings  ########
hdr-compute-peak=yes
hdr-peak-percentile=99.995						# HDR 99.99% its just better than 100%
hdr-contrast-recovery=0.30
allow-delayed-peak-detect=no

########  LOW LATENCY   ########
vd-lavc-fast=yes
# Number of threads to use for decoding. Whether threading is actually supported depends on codec (default: 0). 
# 0 means autodetect number of cores on the machine and use that, up to the maximum of 16
vd-lavc-threads=8       						# multithreaded decoding buffers extra frames 

########  STATIC GRAIN	  ########
# If you use scaling shaders like “nnedi3”, “ravu”etc., make sure you run grain shaders after them.
#glsl-shader=~~/shaders/noise_static_luma_strong.hook

########  DEFAULT SCALERS AND SHADERS  ########
# Default was:
# dscale=hermite (because of mpv 0.37.0)
# cscale=ewa_lanczos
# cscale=ewa_lanczossharp (because of profile=high-quality)
# Go here for more guides https://iamscum.wordpress.com/guides/videoplayback-guide/mpv-conf/

# Shaders which override "scale"/"dscale"/"cscale" to a certain point (depending on the shader)
#### Note below only for ravu scaler
# (without addition)= only luma
# yuv = luma and chroma
# rgb = same as “yuv” but different colour encoding system
# Use the one in “gather” for luma.
# Use the ones in “compute” for -YUV/-RGB.
# If they don’t work, fallback to the ones in the main folder.
# ravu-r4: Solid and reliable.
# ravu-lite-4: Faster and sharper than ravu-r4, but tends to oversharp aliasing a bit and might create few halos/ringing.
# ravu-zoom-r4: Slighly better results than ravu-r4, but much slower.
#### End

########  Luma upscaler  ########
scale=ewa_lanczos								  # Luma upscaler
scale-blur=0.981251
glsl-shader=~~/shaders/FSRCNNX_x2_16_0_4_1.glsl  # FSRCNNX (more powerful, but tend to cause overshoot), use nnedi3 (below) instead if you notice dropped frames
# use nns128 instead of nns256 if you notice dropped frames
#glsl-shader=~~/shaders/nnedi3-nns256-win8x4.hook  # Luma upscaler 
#glsl-shader=~~/shaders/nnedi3-nns128-win8x4.hook  # Luma upscaler
#glsl-shader=~~/shaders/AMD_FSR_EASU_rgb_RT.glsl
#glsl-shader=~~/shaders/ArtCNN_C4F16.glsl   		# for powerfull pc
#glsl-shader=~~/shaders/ravu-zoom-ar-r3-rgb.hook  	# good balance between performance and quality

########  Luma downscaler  ########
dscale=mitchell                       	         # Luma downscaler
correct-downscaling=yes
linear-downscaling=no
glsl-shader=~~/shaders/SSimDownscaler.glsl    	  # Luma downscaler

########  Chroma up + down scaler  ########
cscale=mitchell                        			# Chroma up&downscaler
sigmoid-upscaling=yes
glsl-shader=~~/shaders/CfL_Prediction.glsl
#glsl-shader=~~/shaders/KrigBilateral.glsl

# ====================   CUSTOM PROFILE   ====================

# load-auto-profiles=no							  # Below its all auto apply profile when videos match profile-cond. If u dont want to auto apply-profile then enable this

[4k60] # 2160p @ 60fps (3840x2160 - 3840x1920 UHD)
glsl-shaders-clr 
profile-desc=4k60
profile-cond=((width ==3840 and height ==2160) or (width ==3840 and height ==1920) and p["estimated-vf-fps"]>=31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"		# UHD videos are YUV420 so chroma upscaling is needed and no need	
# UHD videos are already 4K so no luma upscaling is needed
load-auto-profiles=no							# Make it only load one time ( not reapply on fastforward )

[4k30] # 2160p @ 24-30fps (3840x2160 UHD)
glsl-shaders-clr 
profile-cond=((width ==3840 and height ==2160) and p["estimated-vf-fps"]<31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"		# UHD videos are YUV420 so chroma upscaling is needed and no need	
# UHD videos are already 4K so no luma upscaling is needed
load-auto-profiles=no							# Make it only load one time ( not reapply on fastforward )

[2k60] # 1440p @ 60fps (2560x1440 UHD)
glsl-shaders-clr 
profile-cond=((width ==2560 and height ==1440) and p["estimated-vf-fps"]>31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				# 1440p -> 2160p
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[2k30] # 1440p @ 24-30fps (2560x1440 UHD)
glsl-shaders-clr 
profile-cond=((width ==2560 and height ==1440) and p["estimated-vf-fps"]<31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				# 1440p -> 2160p
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[full-hd60] # 1080p @ 60fps (progressive ATSC)
glsl-shaders-clr 
profile-desc=full-hd60
profile-cond=((width ==1920 and height ==1080) and not p["video-frame-info/interlaced"] and p["estimated-vf-fps"]>=31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"	
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed
profile-restore=copy
# glsl-shader="~~/shaders/ravu-lite-ar-r4.hook" # luma upscaling (doubler)
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[full-hd30] # 1080p @ 24-30fps (NextGen TV/ATSC 3.0, progressive Blu-ray)
glsl-shaders-clr 
profile-desc=full-hd30
profile-cond=((width ==1920 and height ==1080) and not p["video-frame-info/interlaced"] and p["estimated-vf-fps"]<31)
profile-restore=copy
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"	
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed
# glsl-shader="~~/shaders/ravu-lite-ar-r4.hook" # less resource intensive luma upscaling (doubler)
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[full-hd-interlaced] # 1080i @ 24-30fps (HDTV, interlaced Blu-rays)
glsl-shaders-clr 
profile-desc=full-hd-interlaced
profile-cond=((width ==1920 and height ==1080) and p["video-frame-info/interlaced"] and p["estimated-vf-fps"]<31)
profile-restore=copy
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"	
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed
# glsl-shader="~~/shaders/ravu-lite-ar-r4.hook" # less resource intensive luma upscaling (doubler)
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[hd] # 720p @ 60 fps (HDTV, Blu-ray - progressive)
glsl-shaders-clr 
profile-desc=hd
profile-cond=(width ==1280 and height ==720)
profile-restore=copy
# no deinterlacer is required
# apply motion interpolation to match display frequency 
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/compute/ravu-zoom-ar-r3-yuv.hook"
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						#
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[sdtv-ntsc] # 640x480, 704x480, 720x480 @ 30fps (NTSC DVD - interlaced)
glsl-shaders-clr 
profile-desc=sdtv-ntsc
profile-cond=((width ==640 and height ==480) or (width ==704 and height ==480) or (width ==720 and height ==480))
profile-restore=copy
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/compute/ravu-zoom-ar-r3-yuv.hook"
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						#
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Weird-Res] # 638x360, 554x416 (Weird resolution that i watched on internet)
glsl-shaders-clr 
profile-desc=You'r Weird
profile-cond=((width ==638 and height ==360) or (width ==554 and height ==416))
profile-restore=copy
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/compute/ravu-zoom-ar-r3-yuv.hook"
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"						#
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[sdtv-pal] # 352x576, 480x576, 544x576, 720x576 @ 30fps (PAL broadcast or DVD - interlaced)
glsl-shaders-clr 
profile-desc=sdtv-pal
profile-cond=((width ==352 and height ==576) or (width ==480 and height ==576) or (width ==544 and height ==576) or (width ==720 and height ==576))
profile-restore=copy
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
# apply debanding
glsl-shader="~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/ArtCNN_C4F32.glsl"				#
glsl-shader="~~/shaders/compute/ravu-zoom-ar-r3-yuv.hook"
glsl-shader="~~/shaders/SSimDownscaler.glsl"
glsl-shader="~~/shaders/CfL_Prediction.glsl"		
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )



[Anime4K-ModeA]
glsl-shaders-clr
profile-desc=Optimized for Most 1080p - 720p - SD anime
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Anime4K-ModeA+A]
glsl-shaders-clr
profile-desc=Same as A better and smoother ( Reconstructs almost all degraded lines ) so far this one is the best
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_M.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Anime4K-ModeB+B]
glsl-shaders-clr
profile-desc=Same as B better perceptual quality
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Anime4K-ModeB]
glsl-shaders-clr
profile-desc=Optimized for Most 1080p - 720p anime (1080p->720p downscaled anime to reduces compression - artifacts - degraded - lines - blur - noise - ringing - aliasing)
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Anime4K-ModeC]
glsl-shaders-clr
profile-desc=1080p->480p downscaled anime - Very rarely, 1080p animated movies - Images with no degradation - Wallpapers - Pixiv art ( Highest PSNR, Reduces noise )
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )


[Anime4K-ModeC+A]
glsl-shaders-clr
profile-desc=Same as C ( Slightly higher perceptual quality )
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_M.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[Fast] # For low internet speed and low-latency
glsl-shaders-clr
profile-desc=Fast & low-latency
profile-restore=copy
scale=bilinear
cscale=bilinear
dscale=bilinear
correct-downscaling=no
linear-downscaling=no
sigmoid-upscaling=no
hdr-compute-peak=no
hdr-peak-percentile=100
hdr-contrast-recovery=0.0
allow-delayed-peak-detect=yes
dither=no
interpolation=no        										# requires reference frames (more buffering)
video-latency-hacks=yes 										# typically 1 or 2 video frame less latency
#stream-buffer-size=4k   										# minimal buffer size; normally not needed
cache-on-disk=yes												# Store cache payload on the hard disk instead of in RAM. (This may negatively impact performance unless used for slow input such as network.)
load-auto-profiles=no											# Make it only load one time ( not reapply on fastforward )

[8bitDeband]
profile-cond=p["video-params/pixelformat"] == "yuv420p"
profile-restore=copy
deband=yes

# ==========    CUSTOM-MISC    ==========

[extension.webm]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=webm
no-pause
loop-file=yes

[extension.gif]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=gif
save-position-on-quit=no
loop-file=inf
no-cache

[pip]				# Picture-In-Picture
profile-restore=copy-equal
ontop
on-all-workspaces
no-force-window-position
geometry=100%:100%
autofit=30%x30%
autofit-smaller=
autofit-larger=

[exit-pip]
profile-restore=copy-equal
ontop=no
geometry=50%:50%
autofit=75%x75%
autofit-smaller=50%x50%

[WebdlDeband]
profile-cond=string.match(p.filename, "%[Web%-DL%]")~=nil
deband=yes
profile-restore=copy

# ==========   Protocol Specific Configuration   ==========

[protocol.http]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=http
hls-bitrate=max 											# use max quality for HLS streams
user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0'

[protocol.https]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=https
profile=protocol.http

[protocol.ytdl]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=ytdl
profile=protocol.http
